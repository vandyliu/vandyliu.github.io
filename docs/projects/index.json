[{"content":"A lot has happened since my last blog post. I have been neglecting making posts\u0026hellip; but maybe this will be the start of them coming up again.\nAfter my Amazon internship, I had an internship at Splunk on the machine learning team. Cool thing about this was that I got a return offer to go the San Fransisco office which I was super excited about. With those two internships and some decent personal projects, I got an internship in the Microsoft Garage program. In the middle of that internship, covid-19 got real serious and we started working from home. You can check out the project I worked on here. Due to covid-19, my internship at Splunk was also remote. You can read about what I did on those internships in my resume.\nI also had the opportunity to work on some more cool personal projects. I realized that I enjoy coding in Python and can whip up things real quick so most of my personal projects gravatate to using Python. You can see more of those on my GitHub.\nI was looking forward to having a summer 2021 internship outside of Vancouver but that does not look likely either now. I really wanted to try out living on my own and see whether to stay local after graduation or move somewhere else. Depending on many factors, I may try to get an internship in the Fall.\nAlso, I decided to revamp the website and give it a better look. This time I used Hugo instead of Jekyll, plus I have a lot more software engineering skills since then so it was much easier to get up and running and make some customizations that I wanted.\n","date":"2021-01-10T00:00:00Z","image":"/vandyliu.com/hugo-website/p/covid-update/splunk_huc09fd31ce9bb786d1041f70ffa59556f_768824_120x120_fill_q75_box_smart1.jpg","permalink":"vandyliu.com/hugo-website/p/covid-update/","title":"Covid Update"},{"content":"I’ve been playing soccer for the past 15 years of my life. I love everything about the game and I enjoy playing it a ton. After high school ended, there wasn’t much opportunity for me to play and I got caught up in a lot of other things like school and work. However, I started dropping in at this indoor soccer event every Thursday. Because I missed the registration date, I am not a registered player and can only play if there aren’t enough registered players willing to play that day. But, there’s also other people like me, who are frequent drop-ins who also want to play. So how does the organizer decide which drop-ins can play and which ones must sit out that week? He does it on a first-come-first-serve basis on whoever replies quickest to his weekly message on WhatsApp.\nI’m usually pretty fast but the organizer doesn’t do it at a set time every week. It can be on Wednesday night, Thursday morning or even Thursday afternoon and I can’t always be checking my phone waiting for that notification. Usually, I get in but this past week, I didn’t by one spot. One drop-in replied quicker by 1 minute and I was only 4 minutes off of the official message… so I decided to build an app that will instantly reply to it so that I am always or close to always first on the list.\nSo I knew what I had to do: find a WhatsApp API that can receive and send messages. I also realized I could use natural language processing (NLP) to see if the message is the official announcement message.\nI only ever use WhatsApp for this soccer event, so I didn’t know about its features and why it is useful. The most important thing it does is end2end encryption. This makes it tough to access my messages through a service other than my phone. Nevertheless, the first thing I tried looking for was a WhatsApp API. I found out that Twilio has a nice API for WhatsApp but after playing around with it, I realized it was only for businesses and you had to pay to use it so I had to scrap that. Next, I looked on Github for WhatsApp APIs and found three promising repos. https://github.com/mukulhase/WebWhatsapp-Wrapper/ Could host in a docker container and do it online in AWS, Azure or GCP https://github.com/Rhymen/go-whatsapp I was actually going to use this because I want to work with GO, but because I also wanted to use NLP, and it’s easier to use NLP libraries in Python, I decided to use the Python wrapper https://github.com/tgalal/yowsup Decided not to go with this because I wanted to host this app online in a docker container and this wouldn’t do it\nNext, I cloned the repo and tried to set up the environment. I ran into an error that I found was an issue on Github (https://github.com/mukulhase/WebWhatsapp-Wrapper/issues/846) that was posted 4 hours before I started this project. I struggled a little about how to go about solving this. I tried different things but it was my first time working with Selenium so I wasn’t too sure about it. I felt pretty stumped but after working on Github in my Microsoft internship and doing an open-source project, I knew that I probably could find a solution in pending PRs, and low and behold I found one: https://github.com/mukulhase/WebWhatsapp-Wrapper/pull/797.\nThis is the end of day 1.\nAfter playing around with it on my local machine, I realized that it would be incredibly nice to host this on the cloud so I don’t have to leave a computer on all the time. Because I work/worked at Microsoft, I wanted to use Microsoft Azure’s VM services. After looking at the free tiers and student credits, I looked at what AWS offered just to make sure I got the best deal. And although this is a questionable move, I decided to be a traitor and use AWS because of the absurd amount of usage I can get away with using its free tier.\nI’ve never used VMs before nor worked with AWS EC2 on my own so this was quite an enjoyable learning experience for me. I set up the EC2 instance and used my SSH and linux skills I got from school. I downloaded all the necessary tools like Docker, GCC and pip and set up some shell scripts to make running the docker containers easier. Now, the docker containers are constantly running.\nNow what did I change from the original repo? The while loop constantly checks for my soccer group chat’s unread messages. If the message is sent from the organizer, which I can check through his ID and has certain key words that he always says, then I reply back immediately that “I am available to play as a drop-in”. This will surely secure me a spot every time.\nI’ve only been tracking his messages since the start of 2020, but here is every one of them so far: Folks, sorry for being late. Please let me know if you can attend to tomorrow’s Thursday night soccer session. Thank you.\nFolks, it is Thursday night soccer again. Please let me know of your attendance for tomorrow night. Thank you.\nFolks, my apology for the late notice.\nPlease let me know if you can attend to this coming Thursday night soccer session.\nThank you.\nFolks, please let me know of your attendance for Tomorrow night’s soccer session. Thank you.\nFolks, please let me know your attendance to tomorrow night’s soccer session. Thank you. Please note that the responses from yesterday will not be counted as formal request for the drop ins. Your respond after this text will count as valid. TQ\nFolks, my apology for late notice.\nPlease let me know of your attendance to tomorrow night’s soccer session. Thank you.\nFolks, it is Thursday night soccer again. Please let me know your attendance to tomorrow’s session. Thank you.\nIn the future, I plan on using some Natural Language Processing (NLP) APIs to easily assess the message and see if it is the “availability inquiry” message. For now, I just make sure the words “folks” and “soccer” are in the string then the message sends… not the smartest but it gets the job done.\nStuff I can still add Add scripts so our docker containers run right when EC2 container is launched https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html Scheduler to run EC2 Instance: Start it on Tuesday mornings and stop it on Thursday nights https://aws.amazon.com/premiumsupport/knowledge-center/start-stop-lambda-cloudwatch/ https://aws.amazon.com/premiumsupport/knowledge-center/stop-start-instance-scheduler/ Set up cloudevents so I don’t go over free tier https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/tracking-free-tier-usage.html#free-budget https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/tracking-free-tier-usage.html#free-tier-table https://console.aws.amazon.com/billing/home#/ NLP https://docs.microsoft.com/en-us/azure/architecture/data-guide/technology-choices/natural-language-processing\nTo make this project even better, I thought about how I could run all these docker containers instantly on start up. I found this article and it looked pretty easy but it was more work than I wanted. I gave up on it when things weren’t working so well. Then I found out about /etc/rc.local which apparently is a bash script that runs on every reboot. It didn’t work for me either. Then I found out about cronjobs from this stack overflow post. I already wrote a bunch of bash scripts to make it easier for me, so now I just call all of them in cronjob so that when my EC2 instance is launched all those scripts run. However, one of my scripts that uses a lot of relative path syntax doesn’t run, so I’ll look into it tomorrow.\nThis is the end of day 2.\nChanged $(pwd) to a full path but it still didn’t work so I decided I want to log the output of the script to a file, which I did with this stack overflow post and I found out that the error was that “the input device is not a tty”, and so I found this stack overflow post and it’s now fixed. Now I have the docker containers running right on boot, but the get_unread_messages_from_chat_id are not getting the unread messages that were sent before the docker containers are spun up. It’s not that big of a deal right now, but will be something I look into.\nNext up, I wanted to automate the start and stop of the EC2 instances. The organizer says he make the announcement on Wednesday, but it is rarely consistent recently, so I want it to start up at Tuesday 11:59PM and stop Thursday at 8:00PM, which is when the session officially starts. This will also make it so that my EC2 instances are not constantly running and possibly costing me money although the free tier is very forgiving.\nI followed this guide and learned a lot more about IAM rules. Albeit, I used them a lot while working at Amazon, I didn’t really understand them because I didn’t need to but wow they are cool! The Python SDKs for running and stopping EC2 instances is so simple. Testing on is super easy on Lambda as well! Setting up events with cronjobs was super easy as well on CloudWatch, so I’m super stoked about all this. Now, my EC2 instance starts up at midnight on Wednesday and shuts down Thursday night.\nCan add a “break” to loop once I send the message to the group so less resources are used. Can also have exit script to kill all docker shit once the docker container closes? https://stackoverflow.com/questions/10541363/self-terminating-aws-ec2-instance\nFigured it out. End program by calling break on While True loop once a condition is met. Then in my run.sh script, I will have a docker wait soccer to block until the container exits, then I call sudo halt to stop the EC2 Instance.\nThis is the end of day 3.\nNow, I really wanted to add some machine learning/AI, in particular some natural language processing. I don’t have a lot of data but I felt like it would be better to do some intent classification rather than my original implementation. I wanted to use Azure products because I had a coffee chat with someone working in cognitive systems, but I was also open to using some AWS services. I found an article by Microsoft and tried to see the best service to use. After some research, I decided upon two possible services I could use: Microsoft LUIS and AWS Comprehend. I tried LUIS first and really liked it. It made it easy to add data and to identify them with an intent then train them. I also checked out AWS Comprehend to see how it is, but it wasn’t for my use case of analyzing short texts. Plus, I had to upload them to S3, which I thought was cumbersome. After playing around with LUIS, and creating some intents with common messages that the organizer sends, I trained the model and got the endpoint. I used a simple Pypi package to create a LUIS client that can easily send texts for analysis and receive the analysis. So now, whenever I get a text from the group chat and from the organizer, I send it to LUIS to analyze it. If the intent is “AttendanceForSoccer”, the bot sends a message to the group chat saying that I am available to play, and gets ready to stop the EC2 Instance.\nIt is finally complete. The only thing I really have to do now is make sure I don’t go above my free tier for LUIS and AWS.\nSo here is my project that gets me into my soccer games that I always have to drop in for. Uses WebWhatsAPI as a client for a WhatsApp instance Uses docker containers to run the selenium browser, and run the python script that can interact with the WhatsApp instance Used shell scripts and crontab to automatically run the docker containers when the EC2 instance starts Docker wait to block until the python script container ends and “sudo halt” to stop the container once the message is sent Uses AWS EC2 to host the docker containers and AWS Lambda and AWS CloudWatch to automatically start and stop the EC2 instance on a particular schedule Uses Microsoft LUIS (Language Understanding Intelligence System) to classify the organizer’s intent so the bot can determine whether to send the “I am available” message or to not respond at all because it is irrelevant\nSo, the first week, it didn’t work. Looking at the monitoring graphs, it looks like the CPU utilization went to 99% at 7AM and then it had close to 0% the entire time. I had to manually reply two minutes after the message sent while I was asleep on the subway. Two drop-ins wanted to join quicker, but due to the coronavirus, I think I’ll still have a spot.\nSo I added better logging, so that on every boot, there is a log that logs the entire output of all the scripts. Furthermore, I added a cloudwatch event that will reboot the EC2 instance if the CPU utilization goes above 85%.\nUpdate: It worked the week after and then soccer is now cancelled due to the coronavirus!\n","date":"2020-03-08T00:00:00Z","image":"/vandyliu.com/hugo-website/p/soccer-games-and-python/soccer_hu770529a3b269481b00ebc1193dcc44df_46032_120x120_fill_q75_box_smart1.jpg","permalink":"vandyliu.com/hugo-website/p/soccer-games-and-python/","title":"Soccer games and Python"},{"content":" Website In Action \nClick here to see it!\nIf you haven\u0026rsquo;t seen my other blog post, make sure to read it first.\nIn the past summer, when I was happy with my project, I decided to host it on heroku and github pages and leave it be until the season started. Once the pre-season started, I noticed a major problem: the boxscores did not update until the game finished. During the game, all the values would be null, making this website incredibly useless.\nI knew this was something I needed to fix, but I held it off until after my Microsoft Garage interview. To prepare for my Microsoft interview, I did a few Leetcode questions and prepared a quick powerpoint for my 10 minute presentation. During one of the three interviews I had, one of the interviewers asked me to talk about a project for the entire interview (45 min).\nMy best project was this one so I talked about it as much as I could. In this interview, I found out that many aspects of my project could have been done much better:\n constantly calling the NBA API endpoint with different proxies is a Denial of Service attack (which is pretty rude by me) making requests with different proxies is unsafe I could probably find a better API endpoint, which would make things safer and then I would not have to use the proxy rotator my React components could be refactored to be more object-oriented and easier to read  After my interview, I was pretty defeated because I didn\u0026rsquo;t think it went so well because almost everything I implemented/designed was questioned, but nevertheless I saw it as a learning opportunity to make something better.\nSo I got home and started improving it. Here is what has changed:\n designed new components and the table based off the NBA website instead of using Ant.design displays ALL games for a given day, regardless if it has started, finished or in-progress displays time left for games in-progress added photos for players in table added ability to sort columns hosting on heroku for free now instead of ($5) pythonanywhere, now that I don\u0026rsquo;t have to wait a long time for requests removal of proxy rotator, and MongoDB because new endpoint is updated in real-time and is very accessible found a new NBA endpoint that gives realtime data other things that I can\u0026rsquo;t remember  Things I still may add:\n sorting games mobile version  Click here to see it!\n","date":"2019-11-02T00:00:00Z","image":"/vandyliu.com/hugo-website/p/updating-my-nba-project/bsqv2_hu8d4eb701e2476e498e764b09908c84b6_4542105_120x120_fill_box_smart1.gif","permalink":"vandyliu.com/hugo-website/p/updating-my-nba-project/","title":"Updating my NBA Project"},{"content":"November 2, 2019 - UPDATED BLOG POST\n Website In Action \nClick here to see it!\nBoxScoreQ is a website to keep you updated on NBA games and their box scores quickly. Whenever I come home from work or school, I open up and see what NBA games I should tune in to. However, I would always want to look at the box score first to see if there is a particular game that might interest me like a game where Derrick Rose currently has 41 points or a game where Klay Thompson is 6-7 from 3 point range. There wasn’t a quick place to find all the box scores in one place, which is why I made BoxScoreQ.\nAfter getting an internship at Amazon, I started slacking off and thought that I could land any internship with just my ordinary resume with Amazon on it. I applied to a bunch of places and mostly got no answers. I had one interview with a smaller company in Vancouver. They asked me about my projects and my best one was your classic “To-do app”. There were no intricate or complexities with it and I did very poorly on the interview. The interviewer asked me if I knew about REST APIs, React, or SQL and I had to sadly say no. After that interview, I decided I had to actually create something interesting and unique, so I started this.\nSome problems that I encountered along the way and how I handled them.\n The NBA stats website would block requests after a couple requests were made in quick succession. This meant that I could not get a lot of NBA box score data, which made the website useless. After some research, I learned I could use a proxy rotator to send requests to the NBA stats website through different proxies to bypass this issue. This made me run into another problem… This problem was that the proxies often failed. I would have to go through at least 10 before one worked, but I couldn’t grab every box score for each game on a day with the same proxy. So if there were 6 games on a day, I would probably have to go through 60 proxies to load all that data, and that takes a lot of time. People nowadays don’t have the patience for that, so what I did was everytime a date was processed, I added all that information into a MongoDB database. Requesting from the database is much faster and no proxy is needed. Originally I hosted it on Heroku, but because the proxies can take a long time and requests to Heroku are only given 30 seconds then most of the time, the requests would time out. I now host it on PythonAnywhere, which is super easy to use and not too expensive. How would I continually update the box score on today\u0026rsquo;s date. Originally used APScheduler to periodically re-request data from the NBA every 5 minutes to keep the data as up to date as possible. PythonAnywhere does not allow for multiple processes but it does have a feature to periodically run scripts, which is where I host those scheduled jobs now It\u0026rsquo;s possible for data to be incorrect or inconsistent due to the nature of networks, APIs and computers in general. I have another script that runs periodically that checks and verifies the data for a random date.  Things I considered:\n  Frontend: Definitely wanted to do in React\n Industry standard Used Ant.design for layout and many components Didn\u0026rsquo;t use Redux but hope to implement it (probably in another project though)    Backend\n Wanted to interact with existing APIs  Discovered NBA_API (Python)   Decided to go with flask because it is easy to create Rest APIs with it Considered Django but didn’t want to create the Schemas and Models for a game For a given date, the process looks like this: Grabs all game IDs from NBA API, grabs the box score for each game ID, remove unnecessary data and organize the data into something more readable and useable, and finally adds it to the database    Database: Using a SQL vs NoSQL database\n SQL  Used in big industries Takes more time to learn Should learn!!!!!!   NoSQL  Already knew it (had experience with Firebase at a hackathon) Easy to pick up and learn Had to restructure data a little to fit NoSQL better Not much use for relations anyways Cheaper   Went with NoSQL (MongoDB)  500MB for free One game is ~32kb 1230 games in a year (Regular season) + 105 (playoffs) 4 MB for a year Can store a lot of games      TechStack: HTML, Python, Flask, React, NBA_API, MongoDB\nClick here to see it!\n","date":"2019-09-15T00:00:00Z","image":"/vandyliu.com/hugo-website/p/full-stack-nba-project/bsq_hue8185e310d6f1127654e0f8b7be6d9b5_7860257_120x120_fill_box_smart1.gif","permalink":"vandyliu.com/hugo-website/p/full-stack-nba-project/","title":"Full Stack NBA Project"},{"content":" Amazon  Amazon Vancouver\nThis past week was my last week as an intern at Amazon. It was an incredible experience, where I learned not only a lot about programming and code, but about the deployment cycle, what work is like, and so many more things.\nWhat I worked on\nUnfortunately, I cannot go into much detail about what I worked on this Summer. I will say that it was an internal developer tool that is frequently used by engineers. I worked with APIs in Java and connecting them to an AngularJS frontend, so it was a good full-stack experience. The other interns mostly worked on internal developer tools that utilized more AWS services like AWS Lambda, Redshift, Cloudwatch, etc so they gained a lot of experience working with those services, while I mostly gained experience with web development. I also worked on automatically resolving some tickets that have been taking up a lot of engineer time.\nThings I learned\n Programming is not just about coding. There is a lot more to programming like communicating, designing, researching and analyzing I spend most of my time at work researching/figuring out how to code stuff and debugging how APIs work and how they connect a backend and a frontend Got experience with AngularJS and Java full stack development Amazon employees really REALLY live by the Leadership Principles so if you ever want to work at Amazon, make sure you embody these and show it off in your interview How to use AWS services like Step Functions, SNS and Lambda  Best moments\n Playing ping pong at lunch Going to Seattle and participating in the internal intern hackathon Getting the rare free lunch Finally finishing tasks that gave me so much trouble during the internship Going out with the other amazing interns  I\u0026rsquo;m incredibly grateful for the opportunity given to me. I learned that I still have a whole lot to learn and I am incredibly excited to take on this challenge. I am also excited to announce I was offered a return offer and am definitely considering going back. I would especially love to go to a new city like Seattle or San Francisco to get a feel of the adult life. I\u0026rsquo;ve never been anywhere outside of BC for an extended period.\n Laptop  My laptop\n My niece  Bonus: Cute picture of my niece repping Amazon :heart_eyes:\n","date":"2019-08-20T00:00:00Z","image":"/vandyliu.com/hugo-website/p/end-of-amazon-internship/amazon2_huce00e86a75590a241a92c1ccd861b169_1578978_120x120_fill_q75_box_smart1.jpg","permalink":"vandyliu.com/hugo-website/p/end-of-amazon-internship/","title":"End of Amazon Internship"},{"content":" Hackathon  Our hackathon presentation\nThis past week Amazon flew me and all the other Amazon Future Engineer (AFE) interns out to Seattle for a hackathon and a music festival. This would be the second hackathon I\u0026rsquo;ve been to. The first one I did was XD Hacks at UBC. At this hackathon, the challenge was to make an Alexa skill for one of three non-profit organizations. Our team built an Alexa skill for the Boys and Girls Club of Washington. Our skill made it simpler and more efficient to check students out as they left the club. One of the utterances we coded were when a student leaves, that student would tell Alexa that they are going home, how they are going home and with whom they are going home with. The other utterance would be asking if a child left, Alexa would check the database, and then say that the child left or that the child is still there. We used node.js for the \u0026ldquo;backend\u0026rdquo; of the Alexa Skill. We hooked it up to a MongoDB database and also created a Web UI that displays all the statuses of the children for a given day. Unfortunately, many teams had similar ideas so it didn\u0026rsquo;t work out so well but I had a lot of fun and learned quite a lot.\nTechnical stuff aside, Seattle was pretty cool. There were lots of Amazon employees everywhere! Every other street, I would see a blue badge around someone\u0026rsquo;s neck or by someone\u0026rsquo;s waist. The Amazon Go store was also super cool. On the last day of our trip, we went to Pike Place Market. The food was pretty expensive and it was packed so we didn\u0026rsquo;t do much there but hopefully, I\u0026rsquo;ll be back one day and I can really explore the city.\nThat same day, we also went to Capitol Hill Block Party. It was also very fun but I lost my brand new iPhone XR\u0026hellip; ):\nThank you Amazon Future Engineers Program for the amazing trip!!!!\n Festival  Not a picture person but this is some of the interns at the festival\n","date":"2019-07-22T00:00:00Z","image":"/vandyliu.com/hugo-website/p/seattle-trip/alexademo_hud1ec546566d4f16b14c81b9d2f773215_1787638_120x120_fill_q75_box_smart1.jpg","permalink":"vandyliu.com/hugo-website/p/seattle-trip/","title":"Seattle Trip"},{"content":" Amazon  My desk\nHello everyone that reads this! (Probably around 1)\nI know I haven\u0026rsquo;t updated this in a while. I\u0026rsquo;ve been pretty busy with school and trying to learn new things. Over second semester, I applied to one summer internship after my friend Josh told me to because there were internships specific for freshmen and sophmores. I googled \u0026lsquo;sophmore internships\u0026rsquo; and found one by Amazon. I applied in February and thought nothing of it. I signed up for summer school already and re-applied to be a summer school TA. In March, I got an email that Amazon wanted to schedule an interview with me and I was stoked!!!!!!!!!!!!!!!! I completely forgot I applied but then I started grinding leetcode.\nI think I went through 50 LeetCode questions in about two weeks. I leetcoded almost 6 hours a day during my reading break. The interview process went pretty smooth for me. I think the questions were a lot easier because of the emphasis on younger undergrads. During the time in between, I dabbled in Python and tried to enjoy my free time before I started working full time.\nIt\u0026rsquo;s been four week since I started and it\u0026rsquo;s been pretty great. I went in knowing so little and I feel like I haven\u0026rsquo;t learned much because there\u0026rsquo;s always so much to learn. There\u0026rsquo;s no doubt that I\u0026rsquo;ve learned a lot though. I\u0026rsquo;m still taking it all in. However, I\u0026rsquo;m starting to get into the groove of things and starting to have a real impact on our project, which is super exciting. I\u0026rsquo;ve been asking a lot of questions and trying to get as much help as possible. Everyone here is so smart and willing to help. I\u0026rsquo;d love to come back here some day.\nNow, I\u0026rsquo;m looking for Fall internships so I\u0026rsquo;m hoping that goes well.\nFeel free to reach out!\n","date":"2019-06-20T00:00:00Z","image":"/vandyliu.com/hugo-website/p/big-update/amazon_hu27f7dc34c9db8fd2b063f3fba6be9864_225252_120x120_fill_q75_box_smart1.jpg","permalink":"vandyliu.com/hugo-website/p/big-update/","title":"Big update"},{"content":"For the past three months, I\u0026rsquo;ve been trying to make a website with Jekyll by taking this repository and making it my own. Unluckily for me, it never worked out. Unfortunately, I don\u0026rsquo;t have enough knowledge about Ruby or Jekyll to figure out how to solve the issues I was having even though the webpage loaded well locally.\nBecause of my stubbornness, I never wanted to give up on it but I think it is finally the time. I want to work on other stuff so I\u0026rsquo;m just going to work with the default jekyll theme for now and although it is not as aesthetic, it should get the job done.\nI don\u0026rsquo;t want my small edits of the website to get unnoticed though so here are some pictures of what this website was supposed to look like!\n Home Page \n Blog Page \nIf anyone knows how to solve the problem, here is the repository link. I would still love to get it up and running!\nUpdate (Jan 10, 2021): New website now ahahahah. Old one can be found on GitHub somewhere.\n","date":"2019-01-26T00:00:00Z","image":"/vandyliu.com/hugo-website/p/a-website-up/chrome_2019-01-26_19-09-13_hu509954822cd231fa6a3e3af97d767b1b_85434_120x120_fill_box_smart1_2.png","permalink":"vandyliu.com/hugo-website/p/a-website-up/","title":"A website up"},{"content":"Welcome!!! :) Hello world, this is my first blog post.\nI\u0026rsquo;ve always been the type of kid to focus solely on school and my grades. It was always hard for me to learn stuff outside of school, even if it interested me. Like most kids, I had phases where I wanted to learn things like the guitar or play ice hockey. I would take up a few lessons and then quit because I never wanted to put in the time to learn. The only thing I really put effort into was my schoolwork and it is shown in my grades.\nHowever, as my time in university continues to come closer to an end, I am realizing the uselessness of only having good grades. I\u0026rsquo;ve been telling myself to start some personal projects for a couple of years now, even dating back to high school but never really kept up with it. Now, with the pressure of applying to co-op jobs looming over me, I\u0026rsquo;ve decided that it is finally time to get uncomfortable and start some projects.\nAnother problem, I\u0026rsquo;ve always had is what to make and what language to use. My thoughts tend to go like this: \u0026ldquo;I want to use javascript because it seems so practical putting up your projects on a webpage, but I don\u0026rsquo;t know javascript and it seems hard to learn. I want to create some machine-learning apps (who doesn\u0026rsquo;t though), but I know almost nothing about machine learning and I still want to focus most of my time exceling at school\u0026rdquo;. I know a lot of people also have the problem of having so many equally-cool ideas, so you start one, and it\u0026rsquo;s super hard, so you start another, and it is also super hard and the cycle continues. This leads to almost nothing created and sadness.\nSo right now, I\u0026rsquo;m going to focus on creating small projects that use what I know or what I am comfortable with learning. Then hopefully I start to find my niche and I\u0026rsquo;ll go on from there.\nThe first project I started working on over the (very short) winter break was a simple game of Pong using the processing application in Java. I still have a lot (A WHOLE LOT) to do before I even want to show people, but it is in the works.\n Pong \nThe second project I started today after finishing almost all my homework yesterday solely to build something. It is a discord bot that helps you set reminders. My inspiration came from a youtube tutorial on building a simple discord bot and I decided I could definitely build off of that. I have no experience in Node.js or javascript but I thought it would be nice to finally play around with those tools today. I used a lot of w3schools whenever I needed help with javascript and eventually coded something that worked! It is really simple and the code is very messy but it\u0026rsquo;s a start. I do plan on making the code a little nicer and maybe adding a few more commands.\n Reminder Bot \nThanks for reading!\n","date":"2019-01-08T00:00:00Z","image":"/vandyliu.com/hugo-website/p/finally-coding-in-my-free-time/java_2019-01-06_13-09-18_hu5c7fb5dc5e94e0a735769d7fcf3b4d73_6256_120x120_fill_box_smart1_2.png","permalink":"vandyliu.com/hugo-website/p/finally-coding-in-my-free-time/","title":"Finally Coding in My Free Time"}]